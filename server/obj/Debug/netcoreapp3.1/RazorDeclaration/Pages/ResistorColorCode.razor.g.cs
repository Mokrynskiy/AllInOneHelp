#pragma checksum "D:\WebProjects\AllInOneHelp\server\Pages\ResistorColorCode.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ae2a01a55a376407acf98bb6e3b80bd01a37dedc"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace AllInOneHelp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "D:\WebProjects\AllInOneHelp\server\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#line 2 "D:\WebProjects\AllInOneHelp\server\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#line 3 "D:\WebProjects\AllInOneHelp\server\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#line 4 "D:\WebProjects\AllInOneHelp\server\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#line 5 "D:\WebProjects\AllInOneHelp\server\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#line 6 "D:\WebProjects\AllInOneHelp\server\_Imports.razor"
using AllInOneHelp.Shared;

#line default
#line hidden
#line 8 "D:\WebProjects\AllInOneHelp\server\_Imports.razor"
using Radzen;

#line default
#line hidden
#line 9 "D:\WebProjects\AllInOneHelp\server\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
    [Microsoft.AspNetCore.Components.RouteAttribute("/resistor-color-code")]
    public partial class ResistorColorCode : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#line 80 "D:\WebProjects\AllInOneHelp\server\Pages\ResistorColorCode.razor"
       
    string colorLine1 = "background-color:black";
    string colorLine2 = "background-color:black";
    string colorLine3 = "background-color:black";
    string colorLine4 = "background-color:black";
    string colorLine5 = "background-color:black";
    string viewColorPiscer1 = "visibility:collapse";
    string viewColorPiscer2 = "visibility:collapse";
    string viewColorPiscer3 = "visibility:collapse";
    string viewColorPiscer4 = "visibility:collapse";
    string viewColorPiscer5 = "visibility:collapse";
    string admission = "20%";
    double valueDoublt = 0;
    string valueString = "0 Ом";
    int value1 = 0;
    int value2 = 0;
    int value3 = 0;
    double multple = 1;
    void Line1Click()    {
        viewColorPiscer1 = "visibility:visible";
        viewColorPiscer2 = viewColorPiscer3 = viewColorPiscer4 = viewColorPiscer5 = "visibility:collapse";
    }
    void Line2Click()
    {
        viewColorPiscer2 = "visibility:visible";
        viewColorPiscer1 = viewColorPiscer3 = viewColorPiscer4 = viewColorPiscer5 = "visibility:collapse";
    }
    void Line3Click()
    {
        viewColorPiscer3 = "visibility:visible";
        viewColorPiscer1 = viewColorPiscer2 = viewColorPiscer4 = viewColorPiscer5 = "visibility:collapse";
    }
    void Line4Click()
    {
        viewColorPiscer4 = "visibility:visible";
        viewColorPiscer1 = viewColorPiscer2 = viewColorPiscer3 = viewColorPiscer5 = "visibility:collapse";
    }
    void Line5Click()
    {
        viewColorPiscer5 = "visibility:visible";
        viewColorPiscer1 = viewColorPiscer2 = viewColorPiscer3 = viewColorPiscer4 = "visibility:collapse";
    }
    void SelectColorLine1(string color, int value)
    {
        colorLine1 = color;
        viewColorPiscer1 = "visibility:collapse";
        value1 = value;
        Calculate();
    }
    void SelectColorLine2(string color, int value)
    {
        colorLine2 = color;
        viewColorPiscer2 = "visibility:collapse";
        value2 = value;
        Calculate();
    }
    void SelectColorLine3(string color, int value)
    {
        colorLine3 = color;
        viewColorPiscer3 = "visibility:collapse";
        value3 = value;
        Calculate();
    }
    void SelectColorLine4(string color, double multiple)
    {
        colorLine4 = color;
        viewColorPiscer4 = "visibility:collapse";
        this.multple = multiple;
        Calculate();
    }
    void SelectColorLine5(string color, string admission)
    {
        colorLine5 = color;
        viewColorPiscer5 = "visibility:collapse";
        this.admission = admission;
    }
    void Calculate()
    {
        valueDoublt = (value1 * 100 + value2 * 10 + value3) * multple;
        valueString = valueDoublt.ToString() + " Ом";
        if (valueDoublt >= 1000)
        {
            valueDoublt /= 1000;
            valueString = valueDoublt.ToString() + " KOм";
        }
        if (valueDoublt >= 1000)
        {
            valueDoublt /= 1000;
            valueString = valueDoublt.ToString() + " MOм";
        }


    }

    List<ColorCodeModel> ColorCodeList = new List<ColorCodeModel>
            {
                new ColorCodeModel(1, "background-color:black", "Черный", 0, 1, ""),
                new ColorCodeModel(2, "background-color:brown", "Коричневый", 1, 10, "1%"),
                new ColorCodeModel(3, "background-color:red", "Красный", 2, 100, "2%"),
                new ColorCodeModel(4, "background-color:orange", "Оранжевый", 3, 1000, ""),
                new ColorCodeModel(5, "background-color:yellow", "Желтый", 4, 10000, ""),
                new ColorCodeModel(6, "background-color:green", "Зеленый", 5, 100000, "0,5%"),
                new ColorCodeModel(7, "background-color:blue", "Голубой", 6, 1000000, "0,25%"),
                new ColorCodeModel(8, "background-color:violet", "Фиолетовый", 7, 10000000, "0,1%"),
                new ColorCodeModel(9, "background-color:gray", "Серый", 8, 0, "0,05%"),
                new ColorCodeModel(10, "background-color:white", "Белый", 9, 0, ""),
                new ColorCodeModel(11, "background-color:gold", "Золотой", 0, 0.1, "5%"),
                new ColorCodeModel(12, "background-color:silver", "Серебрянный", 0, 0.01, "10%")

            };
    class ColorCodeModel
    {
        public int id { get; set; }
        public string stileString { get; set; }
        public string colorName { get; set; }
        public int value { get; set; }
        public double multiple { get; set; }
        public string admission{ get; set; }
        public ColorCodeModel(int id, string stileString, string colorName, int value, double multiple, string admission)
        {
            this.id = id;
            this.stileString = stileString;
            this.colorName = colorName;
            this.value = value;
            this.multiple = multiple;
            this.admission = admission;
        }
    }

#line default
#line hidden
    }
}
#pragma warning restore 1591
